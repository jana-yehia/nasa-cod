#include <WiFi.h>
#include <WebServer.h>

// Define pins for sensors and pump9
const int soilMoisturePin = 34;  // Analog pin for Soil Moisture Sensor
const int rainSensorPin = 35;    // Analog pin for Rain Drop Sensor
const int pumpPin =33;          // Digital pin for Pump
const int dhtPin = 25;           // DHT sensor pin (assuming a DHT11)

// WiFi credentials
const char* ssid = "Adam";
const char* password = "123456789";

// WebServer setup
WebServer server(80);

// Variables to store sensor values
int soilMoistureValue = 0;
int rainValue = 0;
float temperature = 0;
float humidity = 0;
bool pumpStatus = false;

// Setup function to initialize components
void setup() {
  Serial.begin(115200);

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi!");
  Serial.println(WiFi.localIP());  // Print the IP address

  // Initialize web server routes
  server.on("/", handleRoot);
  server.on("/pumpOn", handlePumpOn);
  server.on("/pumpOff", handlePumpOff);
  server.begin();

  // Set pump pin as output
  pinMode(pumpPin, OUTPUT);
  digitalWrite(pumpPin, LOW);  // Start with pump off
}

// Function to read sensor data
void readSensors() {
  soilMoistureValue = analogRead(soilMoisturePin);
  rainValue = analogRead(rainSensorPin);
  
  // Dummy values for DHT sensor (replace with real sensor code if needed)
  temperature = random(20, 30);  // Replace with actual DHT read
  humidity = random(40, 60);     // Replace with actual DHT read
}

// Root handler for the web page
void handleRoot() {
  readSensors();
  String htmlPage = "<html><body><h1>Smart Watering System</h1>";
  htmlPage += "<p>Soil Moisture: " + String(soilMoistureValue) + "</p>";
  htmlPage += "<p>Rain Potential: " + String(rainValue) + "</p>";
  htmlPage += "<p>Temperature: " + String(temperature) + " C</p>";
  htmlPage += "<p>Humidity: " + String(humidity) + " %</p>";
  htmlPage += "<p>Pump Status: " + String(pumpStatus ? "ON" : "OFF") + "</p>";
  htmlPage += "<p><a href=\"/pumpOn\">Turn Pump ON</a></p>";
  htmlPage += "<p><a href=\"/pumpOff\">Turn Pump OFF</a></p>";
  htmlPage += "</body></html>";
  server.send(200, "text/html", htmlPage);
}

// Handler to turn the pump on
void handlePumpOn() {
  pumpStatus = true;
  digitalWrite(pumpPin, HIGH);  // Turn pump on
  server.send(200, "text/html", "<html><body><h1>Pump ON</h1></body></html>");
}

// Handler to turn the pump off
void handlePumpOff() {
  pumpStatus = false;
  digitalWrite(pumpPin, LOW);  // Turn pump off
  server.send(200, "text/html", "<html><body><h1>Pump OFF</h1></body></html>");
}

// Main loop function
void loop() {
  // Handle web server
  server.handleClient();

  // Automatically control pump based on sensor values (soil moisture and rain potential)
  readSensors();
  if (soilMoistureValue < 716 && rainValue > 600) {
    pumpStatus = true;
    digitalWrite(pumpPin, HIGH);  // Turn pump on
  } else {
    pumpStatus = false;
    digitalWrite(pumpPin, LOW);  // Turn pump off
  }

  delay(2000);  // Wait for 2 seconds between readings
}
